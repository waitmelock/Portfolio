#include<iostream>
#include<stdio.h> 
#include<cstdlib>
//獵犬棋 
//規則:請玩家選擇欲擔任兔子(以R表示)或獵犬(以D表示)，由擔任兔子的玩家開始，輪流輸入想要前往的位置座標，
//地圖及座標如下圖所示，兔子由右方開始，三匹獵犬將於左方開始，地圖連接的線段為該點可以前往的方向 
//輸入座標時須注意獵犬不可走回頭路，也就是不能往左方移動，一次只能移動一匹獵犬，且只能移動一步， 
//而兔子每次可以往四周任意一條有通的道路移動一步，以躲避獵犬的包圍，
//當兔子成功逃離鬣狗的包圍並到達座標(1,0)時，兔子方獲勝，反之，
//若獵犬們成功使兔子無路可逃，則由獵犬獲勝。 
//注意:輸入座標時請以(x空白建y)的方式輸入
//，若輸入座標(0,0)(0,4)(2,0)(2,4)您將會跌入黑洞中，並回到原來的位置。 

using namespace std;
//輸出棋盤
void checker(char b[3][5]){
	for(int i=0;i<3;i++){	
	    if(i==0||i==2){
			cout<<" ";
		}
		for(int j=0;j<5;j++){
			cout<<b[i][j];
			if(j==1||j==2||(i==1&&j==3)||(i==1&&j==0)){
			    cout<<"-";
			}
	    }
		cout<<endl;
		if(i==0){
			cout<<" /|\\|/|\\ "<<endl;
		}
		if(i==1){
			cout<<" \\|/|\\|/ "<<endl;
		}	
	}
} 

int main(void){
	int aR=1,bR=4;//兔子前進座標
	int cR,dR;//兔子原始座標 
	int aD,bD;//獵犬前進座標
	int cD,dD;//獵犬原始座標
	int k=0;//要不要繼續迴圈 
	char s;//棋盤內的東西互換 
	char ma[3][5]={};
	//初始化 
	for(int i=0;i<=2;i++){
		for(int j=0;j<=4;j++){
			ma[i][j]='O';
			if((i==0&&j==0)||(i==0&&j==4)||(i==2&&j==0)||(i==2&&j==4)){
			    ma[i][j]=' ';
			}
			
		}
	}
	ma[1][4]='R';	
	ma[0][1]='D';
	ma[1][0]='D';
	ma[2][1]='D';
	cout<<"獵犬棋"<<endl; 
    cout<<"規則:請玩家選擇欲擔任兔子(以R表示)或獵犬(以D表示)，由擔任兔子的玩家開始，"<<endl;
	cout<<"輪流輸入想要前往的位置座標，地圖及座標如下圖所示，兔子由右方開始，三隻獵犬"<<endl;
	cout<<"將從左方開始，地圖連接的線段為該點可以前往的方向，輸入座標時須注意獵犬不可"<<endl;
	cout<<"走回頭路，也就是不能往左方(左、左下、左上)移動，一次只能移動一隻獵犬，且只"<<endl; 
	cout<<"能移動一步，而兔";
	cout<<"子每次可以往四周任意一條有通的道路移動一步，以躲避獵犬的包圍，當兔子成功\逃"<<endl; 
	cout<<"離獵犬的包圍並到達座標(1,0)時，兔子方獲勝，反之，若獵犬們成功\使兔子無路可逃"<<endl; 
	cout<<"則由獵犬獲勝。"<<endl;
    cout<<"注意:輸入座標時請以(x空白鍵y)的方式輸入，若輸入規則外的座標，您將會跌入"<<endl; 
	cout<<"黑洞中，並回到原來的位置"<<endl; 
	
	//地圖
	cout<<"地圖:"<<endl;
	checker(ma);
	//座標 
	cout<<"座標:"<<endl;
	for(int i=0;i<3;i++){	
	    if(i==0||i==2){
			cout<<"      ";
		}
		for(int j=0;j<5;j++){
		    if((i==0&&j==0)||(i==0&&j==4)||(i==2&&j==0)||(i==2&&j==4)){
		        continue;
			}
			else{
				cout<<"("<<i<<","<<j<<")";
			}
			
			if(j==1||j==2||(i==1&&j==3)||(i==1&&j==0)){
			    cout<<"-";
			}
	    }
		cout<<endl;
		if(i==0){
			cout<<"     /  |  \\  |  /  |  \\ "<<endl;
		}
		if(i==1){
			cout<<"     \\  |  /  |  \\  |  / "<<endl;
		}	
	}
	cout<<endl;
	
	//game start
	while(0==0){
	//兔子輸入 	
	cR=aR;
	dR=bR;
	cout<<"請玩家輸入兔子要前往的座標:";
	do{
	    cin>>aR>>bR;
		k=0;
	    //防呆判斷可不可以輸入座標 
	    if((aR==0&&(bR>3||bR<1))||(aR==1&&(bR<0||bR>4))||(aR==2&&(bR>3||bR<1))||(aR>=3)){
		    cout<<"您的兔子掉進黑洞裡啦!"<<endl;
		    cout<<"請重新輸入欲前往的座標:";
		    k=1;
			continue;
		    
	    }
		//不能走超過一格
		if(((aR!=cR)&&(aR!=(cR+1))&&(aR!=(cR-1)))||((bR!=dR)&&(bR!=(dR+1))&&(bR!=(dR-1)))){
			cout<<"一次只能走一格喔!"<<endl;
			cout<<"請重新輸入欲前往的座標:";
    		k=1;
			continue;
		}
		//此路不通 
		if((((cR==1&&dR==1)||(cR==1&&dR==3))&&(aR==0||aR==2)&&bR==2)||(((cR==0&&dR==2)||(cR==2&&dR==2))&&(aR==1||aR==3)&&aR==1)){
			cout<<"此路不通!"<<endl;
			cout<<"請重新輸入欲前往的座標:";
    		k=1;
			continue;
		} 
		//防呆:不能待在原幣不動
		if(aR==cR&&bR==dR){
			cout<<"不能站在原地不動喔!"<<endl;
			cout<<"請重新輸入欲前往的座標:";
    		k=1; 
			continue;
		}
	    //防呆判斷這一格是不是獵犬 
	    if(ma[aR][bR]=='D'){
	 	    cout<<"快把你的兔子帶走，否則要被獵狗吃掉啦!"<<endl;
	    	cout<<"請重新輸入欲前往的座標:";
	    	k=1;
			continue;
	    }
	    
	   
		   
    }while(k==1);
    k=ma[cR][dR];
    ma[cR][dR]=ma[aR][bR];
    ma[aR][bR]=k;
	checker(ma);
	//兔子贏獵犬輸，兔子輸入 
	if(ma[1][0]=='R'){
		cout<<"恭喜兔子成功\躲開了獵犬們，兔子獲勝!"<<endl;
		return 0; 
	}

	//獵犬輸入 
	cout<<"請輸入要移動的獵犬此時的座標:";
	
	do{
	    cin>>cD>>dD;
		k=0;
		//防呆:輸入的原始座標內必須要有獵犬 
		while(ma[cD][dD]!='D'){
			cout<<"看來你家的狗狗不在這裡，快去找找吧!"<<endl;
	    	cout<<"請重新輸入要移動的獵犬此時的座標:";
	    	continue;
	    	k=1;	
		}
	}while(k==1);
	cout<<"請玩家輸入獵犬要前往的座標:";
	
	do{ cin>>aD>>bD;
		k=0;
    	//防呆:判斷可不可以輸入座標 
	    if((aD==0&&(bD>3||bD<1))||(aD==1&&(bD<0||bD>4))||(aD==2&&(bD>3||bD<1))||(aD>=3)){
	    	cout<<"您的獵犬掉進黑洞裡啦!"<<endl;
	    	cout<<"請重新輸入欲前往的座標:";
	    	k=1;
			continue;
	    }
	    //不能走超過一格
		if(((aD!=cD)&&(aD!=(cD+1))&&(aD!=(cD-1)))||((bD!=dD)&&(bD!=(dD+1))&&(bD!=(dD-1)))){
			cout<<"一次只能走一格喔!"<<endl;
			cout<<"請重新輸入欲前往的座標:";
			k=1; 
    		continue;
    		
		}
	    //此路不通 
		if((((cD==1&&dD==1)||(cD==1&&dD==3))&&(aD==0||aD==2)&&bD==2)||(((cD==0&&dD==2)||(cD==2&&dD==2))&&(aD==1||aD==3)&&aD==1)){
			cout<<"此路不通!"<<endl;
			cout<<"請重新輸入欲前往的座標:";
			k=1;
    		continue;
    	
		}
		//防呆:不能往回走
		if(bD<dD){
			cout<<"帥氣的獵犬是不會走回頭路的!"<<endl;
			cout<<"請重新輸入欲前往的座標:";
			k=1;
    		continue;
    	
		} 
		//防呆:不能待在原幣不動
		if(ma[aD][bD]=='D'){
			if(aD==cD&&bD==dD){
			    cout<<"不能站在原地不動喔!"<<endl;
	        	cout<<"請重新輸入欲前往的座標:";
	        	k=1;
	        	continue;
	       		
			}
			else{
			cout<<"獵犬們在同一個位置可是會打架的!"<<endl;
			cout<<"請重新輸入欲前往的座標:";
			k=1;
    		continue;
			}
		}
    	//防呆:判斷這一格是不是兔子 
    	if(ma[aD][bD]=='R'){
    		cout<<"兔子踢了你的獵犬一腳，把你踢回了原來的位置，快去復仇吧!"<<endl; 
    		cout<<"請重新輸入欲前往的座標:";
    		k=1;
    		continue;
    	}
	
    }while(k==1);
	k=ma[cD][dD];
    ma[cD][dD]=ma[aD][bD];
    ma[aD][bD]=k;
	checker(ma);
	//獵犬贏兔子輸，獵犬輸入 
	//0,2
	if(ma[0][2]=='R'&&(ma[0][1]==ma[1][2]&&ma[1][2]==ma[0][3]&&ma[1][2]=='D')){
	    cout<<"恭喜獵犬們捕獲了兔子，獵犬獲勝!"<<endl;
		return 0;	
	} 
	//2,2
	else if(ma[2][2]=='R'&&(ma[2][1]==ma[1][2]&&ma[1][2]==ma[2][3]&&ma[1][2]=='D')){
	    cout<<"恭喜獵犬們捕獲了兔子，獵犬獲勝!"<<endl;
		return 0;	
	}
	//1,4
	else if(ma[1][4]=='R'&&(ma[0][3]==ma[1][3]&&ma[1][3]==ma[2][3]&&ma[1][3]=='D')){
	    cout<<"恭喜獵犬們捕獲了兔子，獵犬獲勝!"<<endl;
		return 0;	
	}
    } 
} 
